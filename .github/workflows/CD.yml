name: CD
on:
  pull_request:
    branches:
      - main

jobs:
  push-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Runner 타임존 설정
        run: |
          sudo timedatectl set-timezone 'Asia/Seoul'

      - name: Node 설정
        uses: actions/setup-node@v1
        with:
          node-version: "18.x"

      - name: Take tag version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: node_modules 폴더 캐싱
        uses: actions/cache@v2
        id: cache
        with:
          path: "**/client/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/client/yarn.lock') }}

      - name: node_modules 폴더 캐시가 없다면 dependencies 설치
        working-directory: "./client"
        if: steps.cache.outputs.cache-hit != 'true'
        run: yarn

      - name: Client 소스 빌드
        working-directory: "./client"
        run: yarn build

      - name: GitHub Container Registry 로그인
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: nagyeong-park
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Docker images build 및 GitHub Container Registry로 push
        uses: docker/build-push-action@v3.2.0
        with:
          push: true
          tags: |
            ghcr.io/nagyeong-park/istock-client:latest
            ghcr.io/nagyeong-park/istock-client:${{ steps.tag_version.outputs.new_tag }}
          context: ./client

  deploy:
    needs: [push-docker-image]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      # - name: Set docker-compose.prod.yml
      #   uses: microsoft/variable-substitution@v1
      #   with:
      #     files: ./docker-compose.prod.yml
      # env:
      #   services.mysql.environment.MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
      #   services.mysql.environment.MYSQL_USER: ${{ secrets.MYSQL_USERNAME }}
      #   services.mysql.environment.MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
      #   services.mysql.environment.MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}

      - name: Copy docker compose & Scripts & Nginx
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          source: "./docker-compose.prod.yml,./script,./nginx"
          target: ${{ env.REPOSITORY }}

      - name: Deploy
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.SSH_IP }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cp -r ~/${{ env.REPOSITORY }}/nginx ~/nginx && rm -rf ~/${{ env.REPOSITORY }}/nginx
            cd ~/${{ env.REPOSITORY }}
            sudo chmod +x ./script/deploy.sh && ./script/deploy.sh
